# Ah, how should this look...
# Hash lines are comments, like in Bash, Perl, etc.

# save-context saves the current context onto a stack.
# restore-context pops from the context stack and makes the pooped context current.
# context includes:
#   transform
#   user-defined variables
#   material / surface parameters
#   anything else that determines how drawing happens that's not an explicit parameter

ctxvar $my-context-variable  # Declare $my-context-variable as a context variable.
alias <ctx save-context      # Define "<ctx" as an alias for "save-context"
alias ctx> restore-context

include urn:sha1:BLAHBLAHBLAH # Include another script as if its contents were typed inline

123 $my-context-variable !   # Store 123 into $my-context-variable
$my-context-variable @       # Load the value of $my-context-variable onto the stack
my-context-variable          # Shorthand for $my-context-variable @

### Functions, control structures

: my-function blah blah blah ; # Define a function
: my-label : my-other-label  ; # : really just defines a label for a point in the code

my-function                    # Call my-function
$my-function                   # Get the address of my-function or label

x $my-label jz                 # Jump to my-label if x is zero
x $my-label jnz                # Jump to my-label if x is non-zero

# Standard if/else/then and case/of/endof/endcase from forth

true if 
  it-was
else
then

somevar case
  32 of do-something endof
  64 of do-something-bigger endof
  do-default-thing
endcase

### Drawing

3 $material !                  # Set the current material to 3

1 0 0 move                     # Move the 'cursor' by <+1,0,0> (this affects the current transform)
2 scale                        # Scals (later moves and draws will be this much bigger)
1 2 3 90 degrees rotaa         # Rotate around axis <1,2,3> by 90 degrees ('degrees' translates degrees to radians)

plot-sphere # Draw a sphere

alias openpoly open-polygon    # More handy aliases?
alias polypt polygon-point
alias 

open-polygon 1 0 0 move polygon-point 0 1 0 move polygon-point -1 0 0 move fill-polygon # Draw a polygon

save-context 0 0 1 move 0.5 plot-sphere restore-context # Save context, do some stuff, restore context

# Environment variables:
# Transform is passed in as part of the context.
# Other variables may also be passed in that way.

t    # Animation phase, [0..1)

# User-defined context-variables?
# e.g. for chatacter animation, position of legs, arms, etc.
# Solution: they are context variables, but your script must declare them to use them.

